#!/usr/bin/env node

import { BuFalaStoreIconGenerator } from './icon-generator';
import { program } from 'commander';
import path from 'path';

program
  .name('bu-fala-icon-generator')
  .description('Gerador de √≠cones para lojas do Bu Fala')
  .version('1.0.0');

program
  .command('generate')
  .description('Gera todos os √≠cones para lojas')
  .option('-o, --output <dir>', 'Diret√≥rio de sa√≠da', './store_assets')
  .option('-p, --platform <platform>', 'Plataforma espec√≠fica (play-store, app-store, web, microsoft)')
  .option('--high-quality', 'Gera √≠cones em alta qualidade (mais lento)')
  .action(async (options) => {
    console.log('üé® Bu Fala Icon Generator v1.0.0\n');
    
    const generator = new BuFalaStoreIconGenerator();
    const outputDir = path.resolve(options.output);
    
    try {
      if (options.platform) {
        console.log(`üì± Gerando √≠cones para: ${options.platform}`);
        
        switch (options.platform.toLowerCase()) {
          case 'play-store':
          case 'android':
            await generator['generatePlayStoreIcons'](outputDir);
            break;
          case 'app-store':
          case 'ios':
            await generator['generateAppStoreIcons'](outputDir);
            break;
          case 'web':
          case 'pwa':
            await generator['generateWebStoreIcons'](outputDir);
            break;
          case 'microsoft':
          case 'windows':
            await generator['generateMicrosoftStoreIcons'](outputDir);
            break;
          default:
            console.error(`‚ùå Plataforma n√£o suportada: ${options.platform}`);
            process.exit(1);
        }
      } else {
        await generator.generateAllStoreAssets(outputDir);
      }
      
    } catch (error) {
      console.error('‚ùå Erro durante a gera√ß√£o:', error);
      process.exit(1);
    }
  });

program
  .command('preview')
  .description('Gera preview dos √≠cones principais')
  .option('-o, --output <dir>', 'Diret√≥rio de sa√≠da', './preview')
  .action(async (options) => {
    console.log('üëÄ Gerando preview dos √≠cones...\n');
    
    // Implementar preview simples
    const generator = new BuFalaStoreIconGenerator();
    // Gerar apenas os √≠cones principais para preview r√°pido
    console.log('Preview n√£o implementado ainda. Use "generate" para ver todos os √≠cones.');
  });

program
  .command('validate')
  .description('Valida os √≠cones gerados')
  .argument('<dir>', 'Diret√≥rio com os √≠cones')
  .action(async (dir) => {
    console.log(`üîç Validando √≠cones em: ${dir}\n`);
    
    // Implementar valida√ß√£o
    console.log('Valida√ß√£o n√£o implementada ainda.');
  });

// Parse dos argumentos
program.parse();

"""
Servi√ßo Gemma simplificado para sistemas com recursos limitados
"""

import os
import logging
from datetime import datetime
from config.settings import BackendConfig
from utils.fallback_responses import FallbackResponseGenerator

logger = logging.getLogger(__name__)

class GemmaServiceSimplified:
    """Vers√£o simplificada do servi√ßo Gemma para fallback"""
    
    def __init__(self):
        self.is_initialized = False
        self.loading_method = "simplified"
        self.fallback_generator = FallbackResponseGenerator()
        
        # Verificar se deve usar modo simplificado
        self.simple_mode = os.getenv('BU_FALA_SIMPLE_MODE', 'false').lower() == 'true'
        
        if self.simple_mode:
            logger.info("üîÑ Iniciando Gemma em modo simplificado (sem carregamento de modelo)")
            self.is_initialized = True
        else:
            logger.info("üöÄ Modo normal - tentando carregar modelo Gemma")
            self._try_load_model()
    
    def _try_load_model(self):
        """Tentar carregar modelo com timeout"""
        try:
            # Verificar se modelo existe
            if not os.path.exists(BackendConfig.MODEL_PATH):
                logger.warning(f"‚ö†Ô∏è Modelo n√£o encontrado: {BackendConfig.MODEL_PATH}")
                self.simple_mode = True
                self.is_initialized = True
                return
            
            # Carregar apenas em modo simplificado por enquanto
            logger.info("üí° Usando modo simplificado por quest√µes de performance")
            self.simple_mode = True
            self.is_initialized = True
            
        except Exception as e:
            logger.error(f"‚ùå Erro ao carregar modelo: {e}")
            logger.info("üîÑ Fallback para modo simplificado")
            self.simple_mode = True
            self.is_initialized = True
    
    def generate_response(self, prompt, language='pt-BR', subject='general'):
        """Gerar resposta (simplificada ou com modelo)"""
        try:
            if not prompt or not prompt.strip():
                return "Por favor, forne√ßa uma pergunta ou texto para an√°lise."
            
            if self.simple_mode:
                return self._generate_simplified_response(prompt, language, subject)
            else:
                # Aqui seria a gera√ß√£o com modelo real
                return self._generate_simplified_response(prompt, language, subject)
                
        except Exception as e:
            logger.error(f"‚ùå Erro na gera√ß√£o: {e}")
            return self.fallback_generator.generate_response(prompt, language, subject)
    
    def _generate_simplified_response(self, prompt, language, subject):
        """Gerar resposta simplificada baseada em templates"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        
        # Respostas espec√≠ficas por dom√≠nio
        domain_responses = {
            'medical': f"""
Com base na sua consulta m√©dica: "{prompt[:100]}..."

üè• **Orienta√ß√µes Gerais:**
‚Ä¢ Esta √© uma an√°lise preliminar baseada em padr√µes comuns
‚Ä¢ Sempre consulte um m√©dico profissional para diagn√≥stico adequado
‚Ä¢ Em caso de emerg√™ncia, procure atendimento m√©dico imediato

üí° **Recomenda√ß√µes:**
‚Ä¢ Mantenha h√°bitos saud√°veis (alimenta√ß√£o, exerc√≠cios, sono)
‚Ä¢ Fa√ßa exames preventivos regulares
‚Ä¢ Monitore sintomas e procure ajuda quando necess√°rio

‚ö†Ô∏è **IMPORTANTE:** Este sistema n√£o substitui consulta m√©dica profissional.

[Resposta gerada pelo Bu Fala - Modo Simplificado √†s {timestamp}]
""",
            
            'education': f"""
Sobre sua quest√£o educacional: "{prompt[:100]}..."

üìö **Orienta√ß√µes de Aprendizagem:**
‚Ä¢ Divida o conte√∫do em partes menores para melhor absor√ß√£o
‚Ä¢ Pratique regularmente para fixar o conhecimento
‚Ä¢ Use diferentes m√©todos de estudo (visual, auditivo, pr√°tico)

üéØ **Dicas de Estudo:**
‚Ä¢ Crie resumos e mapas mentais
‚Ä¢ Fa√ßa exerc√≠cios pr√°ticos
‚Ä¢ Busque explica√ß√µes em fontes confi√°veis

üí° **Para aprofundar:** Consulte livros, artigos acad√™micos e professores especializados.

[Resposta educacional √†s {timestamp}]
""",
            
            'agriculture': f"""
Sobre sua quest√£o agr√≠cola: "{prompt[:100]}..."

üå± **Orienta√ß√µes Gerais de Cultivo:**
‚Ä¢ Prepare o solo adequadamente antes do plantio
‚Ä¢ Monitore irriga√ß√£o e drenagem regularmente
‚Ä¢ Use pr√°ticas sustent√°veis de manejo

üöú **Boas Pr√°ticas:**
‚Ä¢ Rota√ß√£o de culturas para manter fertilidade do solo
‚Ä¢ Controle integrado de pragas e doen√ßas
‚Ä¢ Manejo adequado de nutrientes

üåø **Sustentabilidade:** Considere t√©cnicas org√¢nicas e preserva√ß√£o ambiental.

[Orienta√ß√£o agr√≠cola √†s {timestamp}]
""",
            
            'wellness': f"""
Sobre seu bem-estar: "{prompt[:100]}..."

üí™ **Orienta√ß√µes de Wellness:**
‚Ä¢ Mantenha equil√≠brio entre trabalho e descanso
‚Ä¢ Pratique atividades f√≠sicas regularmente
‚Ä¢ Cuide da sa√∫de mental e emocional

üßò **Pr√°ticas Recomendadas:**
‚Ä¢ Medita√ß√£o e t√©cnicas de relaxamento
‚Ä¢ Alimenta√ß√£o balanceada e hidrata√ß√£o
‚Ä¢ Sono de qualidade (7-8 horas por noite)

üåü **Lembre-se:** Pequenas mudan√ßas di√°rias podem ter grande impacto na qualidade de vida.

[Orienta√ß√£o de bem-estar √†s {timestamp}]
""",
            
            'environmental': f"""
Sobre a quest√£o ambiental: "{prompt[:100]}..."

üåç **Orienta√ß√µes Ambientais:**
‚Ä¢ Pratique os 3 Rs: Reduzir, Reutilizar, Reciclar
‚Ä¢ Economize √°gua e energia no dia a dia
‚Ä¢ Prefira transporte sustent√°vel quando poss√≠vel

‚ôªÔ∏è **A√ß√µes Sustent√°veis:**
‚Ä¢ Separa√ß√£o adequada de res√≠duos
‚Ä¢ Uso consciente de recursos naturais
‚Ä¢ Apoio a iniciativas de preserva√ß√£o

üå± **Impacto Positivo:** Cada a√ß√£o individual contribui para um futuro mais sustent√°vel.

[Orienta√ß√£o ambiental √†s {timestamp}]
"""
        }
        
        # Obter resposta espec√≠fica ou usar resposta geral
        if subject in domain_responses:
            return domain_responses[subject]
        else:
            return f"""
Sobre sua pergunta: "{prompt[:100]}..."

üí° **Resposta Geral:**
Obrigado por usar o Bu Fala! Estou funcionando em modo simplificado no momento, mas posso fornecer orienta√ß√µes b√°sicas sobre diversos temas.

üéØ **Para respostas mais espec√≠ficas:**
‚Ä¢ Use as √°reas especializadas (m√©dica, educa√ß√£o, agricultura, wellness)
‚Ä¢ Formule perguntas mais espec√≠ficas
‚Ä¢ O sistema completo com IA estar√° dispon√≠vel em breve

üìû **Suporte:** Para quest√µes complexas, consulte profissionais especializados na √°rea.

[Resposta geral √†s {timestamp}]
"""
    
    def get_status(self):
        """Obter status do servi√ßo"""
        return {
            'initialized': self.is_initialized,
            'loading_method': self.loading_method,
            'device': 'cpu',
            'model_path': BackendConfig.MODEL_PATH if hasattr(BackendConfig, 'MODEL_PATH') else 'N/A',
            'optimizations_enabled': False,
            'simple_mode': self.simple_mode,
            'multimodal_capable': False,
            'supports_image_analysis': False,
            'supports_audio_processing': False,
            'model_version': 'simplified-fallback',
            'performance_mode': 'optimized'
        }

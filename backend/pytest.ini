[tool:pytest]
# Configuração do pytest para Moransa Backend

# Diretórios de teste
testpaths = tests

# Padrões de arquivos de teste
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Marcadores personalizados
markers =
    unit: marca testes unitários
    integration: marca testes de integração
    slow: marca testes lentos
    api: marca testes de API
    service: marca testes de serviços
    config: marca testes de configuração
    multimodal: marca testes multimodais
    medical: marca testes médicos
    agricultural: marca testes agrícolas
    educational: marca testes educacionais
    translation: marca testes de tradução
    offline: marca testes offline
    emergency: marca testes do módulo de emergência
    language: marca testes do módulo de linguagem
    community: marca testes do módulo comunitário
    security: marca testes de segurança
    performance: marca testes de performance
    database: marca testes que usam banco de dados

# Opções padrão para CI/CD
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-fail-under=70
    --cov-branch
    --durations=10
    --maxfail=5
    --timeout=300
    -ra

# Filtros de warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::ResourceWarning

# Configuração de logging durante testes
log_cli = false
log_cli_level = ERROR
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configuração de cobertura
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */venv_*/*
    */env/*
    */.venv/*
    */site-packages/*
    setup.py
    conftest.py
    */migrations/*
    */static/*
    */templates/*
    */node_modules/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

ignore_errors = True
precision = 2
show_missing = True
skip_covered = False
skip_empty = False
sort = Cover

[coverage:html]
directory = htmlcov
title = Moransa Backend - Cobertura de Testes

[coverage:xml]
output = coverage.xml
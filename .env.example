# Configurações do Moransa - Sistema de IA para Comunidades da Guiné-Bissau
# Copie este arquivo para .env e configure as variáveis conforme necessário

# =============================================================================
# CONFIGURAÇÕES GERAIS
# =============================================================================

# Ambiente de execução (development, production, testing)
FLASK_ENV=development

# Chave secreta para sessões e tokens (MUDE EM PRODUÇÃO!)
SECRET_KEY=moransa_secret_key_change_in_production_123456789

# Debug mode (apenas para desenvolvimento)
FLASK_DEBUG=1

# =============================================================================
# CONFIGURAÇÕES DO BACKEND
# =============================================================================

# Host e porta do servidor
API_BASE_URL=http://0.0.0.0:5000/api
BACKEND_HOST=0.0.0.0
BACKEND_PORT=5000
HOST=0.0.0.0
PORT=5000

# Configurações de timeout e retry
API_TIMEOUT=30000
CONNECTION_TIMEOUT=10000
REQUEST_TIMEOUT=300
MAX_RETRIES=3
RETRY_DELAY=1000

# Tamanho máximo de upload (MB)
MAX_CONTENT_LENGTH=16

# Configurações de debug e logging
DEBUG=true
LOG_LEVEL=info

# =============================================================================
# CONFIGURAÇÕES DE IA/ML
# =============================================================================

# Token do Hugging Face (para modelos privados)
HUGGINGFACE_TOKEN=your_huggingface_token_here

# Credenciais do Kaggle (para acesso ao Gemma-3n)
KAGGLE_USERNAME=your_kaggle_username
KAGGLE_KEY=your_kaggle_key
KAGGLE_CONFIG_PATH=/root/.kaggle/kaggle.json

# Configurações do Ollama
OLLAMA_HOST=http://ollama:11434
OLLAMA_MODEL=gemma2:3b
OLLAMA_TIMEOUT=120
OLLAMA_MAX_RETRIES=3

# Configurações do modelo Gemma-3n
GEMMA_MODEL_NAME=google/gemma-2-3b-it
GEMMA_DEVICE=auto
GEMMA_MAX_LENGTH=2048
GEMMA_TEMPERATURE=0.7
GEMMA_TOP_P=0.9
GEMMA_TOP_K=50
GEMMA_DO_SAMPLE=true

# Diretório de cache dos modelos
MODEL_CACHE_DIR=/app/models

# Configurações de otimização
USE_QUANTIZATION=true
USE_FLASH_ATTENTION=false
MAX_MEMORY_GB=4
USE_MULTIMODAL=true
MAX_IMAGE_SIZE=1024

# =============================================================================
# CONFIGURAÇÕES DE BANCO DE DADOS
# =============================================================================

# URL do banco de dados (PostgreSQL recomendado para produção)
DATABASE_URL=postgresql://moransa:password@postgres:5432/moransa_db

# Para desenvolvimento com SQLite
# DATABASE_URL=sqlite:///moransa.db

# Pool de conexões
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# =============================================================================
# CONFIGURAÇÕES DE CACHE (Redis)
# =============================================================================

# URL do Redis
REDIS_URL=redis://:dev_redis_123@redis:6379/0

# TTL padrão do cache (segundos)
CACHE_DEFAULT_TIMEOUT=3600

# =============================================================================
# CONFIGURAÇÕES DE EMAIL
# =============================================================================

# Servidor SMTP
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USE_SSL=false

# Credenciais de email
MAIL_USERNAME=your_email@gmail.com
MAIL_PASSWORD=your_app_password

# Email padrão do sistema
MAIL_DEFAULT_SENDER=noreply@moransa.app

# Para desenvolvimento (usar Mailhog)
# MAIL_SERVER=mailhog
# MAIL_PORT=1025
# MAIL_USE_TLS=false

# =============================================================================
# CONFIGURAÇÕES DE LOGGING
# =============================================================================

# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Arquivo de log
LOG_FILE=/app/logs/moransa.log

# Rotação de logs
LOG_MAX_BYTES=10485760  # 10MB
LOG_BACKUP_COUNT=5

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================

# JWT Secret (para autenticação)
JWT_SECRET_KEY=moransa_jwt_secret_change_in_production

# Tempo de expiração do JWT (segundos)
JWT_ACCESS_TOKEN_EXPIRES=3600  # 1 hora
JWT_REFRESH_TOKEN_EXPIRES=2592000  # 30 dias

# CORS Origins (separados por vírgula)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,https://moransa.app

# Rate limiting
RATE_LIMIT_STORAGE_URL=redis://:dev_redis_123@redis:6379/1
RATE_LIMIT_DEFAULT=100 per hour

# =============================================================================
# CONFIGURAÇÕES DO NGINX
# =============================================================================

# Rate limiting
NGINX_RATE_LIMIT=10r/s
NGINX_BURST_LIMIT=20

# Tamanho máximo do body
NGINX_MAX_BODY_SIZE=10m

# Timeout do proxy
NGINX_PROXY_TIMEOUT=300s

# =============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO
# =============================================================================

# Sentry DSN (para tracking de erros)
SENTRY_DSN=your_sentry_dsn_here

# Ambiente do Sentry
SENTRY_ENVIRONMENT=development

# =============================================================================
# CONFIGURAÇÕES ESPECÍFICAS DA GUINÉ-BISSAU
# =============================================================================

# Idiomas suportados (separados por vírgula)
SUPPORTED_LANGUAGES=pt-BR,pt-GW,crioulo,balanta,fula,mandinga

# Idioma padrão
DEFAULT_LANGUAGE=pt-BR

# Fuso horário
TIMEZONE=Africa/Bissau

# Moeda local
LOCAL_CURRENCY=XOF

# Configurações culturais
CULTURAL_CONTEXT=guinea_bissau
LOCAL_CUSTOMS=traditional_medicine,community_support
EMERGENCY_CONTACTS=117,118,119

# =============================================================================
# CONFIGURAÇÕES DE SWAGGER/DOCUMENTAÇÃO
# =============================================================================

# Swagger UI
SWAGGER_ENABLED=true
SWAGGER_URL=/docs
SWAGGER_TITLE=Moransa API
SWAGGER_VERSION=1.0.0
SWAGGER_DESCRIPTION=API para assistência médica, educacional e agrícola na Guiné-Bissau

# =============================================================================
# CONFIGURAÇÕES DE CORS
# =============================================================================

# CORS habilitado
CORS_ENABLED=true
CORS_ALLOW_CREDENTIALS=true
CORS_MAX_AGE=86400

# =============================================================================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# =============================================================================

# Recarregamento automático
WATCHDOG_ENABLED=true

# Profiling
PROFILING_ENABLED=false

# Modo de debug do SQLAlchemy
SQLALCHEMY_ECHO=false

# =============================================================================
# CONFIGURAÇÕES DE PRODUÇÃO
# =============================================================================

# SSL/HTTPS
FORCE_HTTPS=false
SSL_CERT_PATH=/etc/ssl/certs/moransa.crt
SSL_KEY_PATH=/etc/ssl/private/moransa.key

# Workers do Gunicorn
GUNICORN_WORKERS=4
GUNICORN_WORKER_CLASS=gevent
GUNICORN_WORKER_CONNECTIONS=1000

# =============================================================================
# CONFIGURAÇÕES DE BACKUP
# =============================================================================

# Configurações de backup automático
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Todo dia às 2h
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=/app/backups

# =============================================================================
# CONFIGURAÇÕES ADICIONAIS
# =============================================================================

# Configurações de performance
WORKER_PROCESSES=4
WORKER_THREADS=2
MAX_CONCURRENT_REQUESTS=100

# Configurações de cache avançado
CACHE_TYPE=redis
CACHE_KEY_PREFIX=moransa:
CACHE_SERIALIZER=json

# Configurações de sessão
SESSION_TYPE=redis
SESSION_PERMANENT=false
SESSION_USE_SIGNER=true
SESSION_KEY_PREFIX=moransa:session:

# =============================================================================
# NOTAS IMPORTANTES
# =============================================================================

# 1. Este arquivo .env.example é um template
# 2. Copie para .env e configure as variáveis reais
# 3. NUNCA commite o arquivo .env com credenciais reais
# 4. Em produção, use variáveis de ambiente do sistema
# 5. Mantenha as chaves secretas seguras e únicas
# 6. Configure SSL/HTTPS em produção
# 7. Use senhas fortes para banco de dados e Redis
# 8. Configure monitoramento e alertas adequados

# =============================================================================
# CONFIGURAÇÕES DE ANALYTICS
# =============================================================================

# Google Analytics
GA_TRACKING_ID=your_ga_tracking_id

# Mixpanel
MIXPANEL_TOKEN=your_mixpanel_token

# =============================================================================
# CONFIGURAÇÕES DE INTEGRAÇÃO
# =============================================================================

# WhatsApp Business API
WHATSAPP_TOKEN=your_whatsapp_token
WHATSAPP_PHONE_NUMBER_ID=your_phone_number_id

# Telegram Bot
TELEGRAM_BOT_TOKEN=your_telegram_bot_token

# SMS Provider (Twilio)
TWILIO_ACCOUNT_SID=your_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=your_twilio_phone_number

# =============================================================================
# CONFIGURAÇÕES DE ARMAZENAMENTO
# =============================================================================

# AWS S3 (para arquivos estáticos)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_S3_BUCKET=moransa-static
AWS_S3_REGION=us-east-1

# Cloudinary (para imagens)
CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud
CLOUDINARY_API_KEY=your_cloudinary_key
CLOUDINARY_API_SECRET=your_cloudinary_secret